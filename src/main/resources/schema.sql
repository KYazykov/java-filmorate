drop table if exists FILM_GENRES cascade;

drop table if exists FRIENDSHIP cascade;

drop table if exists GENRES cascade;

drop table if exists LIKES cascade;

drop table if exists FILM cascade;

drop table if exists mpa cascade;

drop table if exists USERS cascade;

create table IF NOT EXISTS mpa
(
    mpa_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name varchar(100)
);

create table IF NOT EXISTS film
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    duration     integer      not null,
    name         varchar(100) not null,
    description  varchar(200) not null,
    mpa_id       INTEGER,
    release_date date
);

create table IF NOT EXISTS users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(50) not null,
    login    varchar(50) not null,
    name     varchar(50),
    birthday date
);

create table IF NOT EXISTS film_genres
(
    film_genres_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id        Integer,
    genre_id       Integer
);

create table IF NOT EXISTS genres
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(50)
);

create table IF NOT EXISTS likes
(
    film_id INTEGER REFERENCES film (film_id) ON DELETE NO ACTION,
    user_id INTEGER REFERENCES users (user_id) ON DELETE NO ACTION,
    CONSTRAINT like_id PRIMARY KEY (film_id, user_id)
);

create table IF NOT EXISTS friendship
(
    friendship_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id       Integer,
    friend_id     Integer,
    status        ENUM ('UNCONFIRMED', 'CONFIRMED')
);


